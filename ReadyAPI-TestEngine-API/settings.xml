<?xml version="1.0" encoding="UTF-8"?>
<con:interface xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config" xsi:type="con:RestService" id="5a255022-c9df-4ad3-aa43-6efe336e3f10" name="ReadyAPI TestEngine API" type="rest_ex" wadlVersion="https://swagger.io/openapiv3/specification" definitionUrl="https://api.swaggerhub.com/apis/SE-Design/readyapi-testengineRusselLocal/1.9.0">
  <con:description id="4d4f0735-a045-41dc-a2c7-c49fed29f030">A REST based API testing framework; submit Ready API/SoapUI projects using your favorite HTTP client, one of the existing open-source clients/tools on GitHub to run API tests either asynchronously or synchronously: - Generate your own client from this specification: https://app.swaggerhub.com/apis/smartbear/readyapi-testengine - Use our Jenkins plugin: https://support.smartbear.com/downloads/readyapi/</con:description>
  <con:settings>
    <con:setting id="5a255022-c9df-4ad3-aa43-6efe336e3f10fileName">ReadyAPI-TestEngine-API</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="https://api.swaggerhub.com/apis/SE-Design/readyapi-testengineRusselLocal/1.9.0">
    <con:part>
      <con:url>https://api.swaggerhub.com/apis/SE-Design/readyapi-testengineRusselLocal/1.9.0</con:url>
      <con:content><![CDATA[{"openapi":"3.0.2","info":{"title":"ReadyAPI TestEngine API","description":"A REST based API testing framework; submit Ready API/SoapUI projects using your favorite HTTP client, one of the existing open-source clients/tools on GitHub to run API tests either asynchronously or synchronously: - Generate your own client from this specification: https://app.swaggerhub.com/apis/smartbear/readyapi-testengine - Use our Jenkins plugin: https://support.smartbear.com/downloads/readyapi/","contact":{"name":"SmartBear Software","url":"http://smartbear.com/","email":"sales@smartbear.com"},"license":{"name":"SmartBear Terms of Use","url":"https://smartbear.com/terms-of-use/"},"version":"1.9.0"},"servers":[{"url":"http://localhost:8091/api/v1","description":"Basepath"}],"paths":{"/testjobs/{testjobId}":{"delete":{"tags":["testjob"],"summary":"Cancels the specified testjob.","description":"Use this operation to stop the run specified by <i>testjobId</i>. You can find the testjobId in the response to your testjob request, or you can send a GET <code>/testjobs</code> request to the TestEngine.","operationId":"cancelTestjob","parameters":[{"$ref":"#/components/parameters/testjobIdParam"}],"responses":{"200":{"description":"Testjob canceled"},"404":{"description":"The specified test run was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/{testjobId}/priority":{"put":{"tags":["testjob"],"summary":"Change priority of the specified testjob.","description":"Use this operation to change the priority of the testjob specified by <i>testjobId</i>. You can find the testjobId in the response to your testjob request, or you can send a GET <code>/testjobs</code> request to the TestEngine. Only admin users are allowed to change priority.","operationId":"updateTestjobPriority","parameters":[{"$ref":"#/components/parameters/testjobIdParam"},{"$ref":"#/components/parameters/priorityParam"}],"responses":{"200":{"description":"Testjob priority changed"},"400":{"description":"Testjob priority could not be changed"},"403":{"description":"The authenticated user is not admin"},"404":{"description":"An active testjob with that id is was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/{testjobId}/transactions":{"get":{"tags":["testjob"],"summary":"Returns the transaction logs for the specified test job.","description":"Use this operation to get transaction logs (individual request and response of executed test steps) of the test job specified by <i>testjobId</i>.  You can find it in the response of your test job request.","operationId":"getTransactions","parameters":[{"$ref":"#/components/parameters/testjobIdParam"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HarLogRoot"}}}},"204":{"description":"There are no transactions for this test job"},"404":{"description":"The specified test job was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/{testjobId}/delete":{"delete":{"tags":["testjob"],"summary":"Deletes the specified testjob.","description":"Deletes a single testjob with the id specified as the <i>testjobId<i> path-parameter. This will completely remove the testjob and it will not be possible to restore it afterwards. A regular user can only delete their own testjobs. An admin can delete any testjob. After deletion is successful a message will be sent to any client connected a websocket connection which can be established using the <code>/token</code endpoint.","parameters":[{"$ref":"#/components/parameters/testjobIdParam"}],"responses":{"200":{"description":"Testjob removed"},"400":{"description":"The testjob is in progress and must be canceled before it can be deleted"},"404":{"description":"The specified test job was not found"},"403":{"description":"The authenticated user is not admin or the user who started the testjob"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/{testjobId}/transactions/{transactionId}":{"get":{"tags":["testjob"],"summary":"Gets message exchange for a test step test job transaction.","description":"A particular test job of a test step is referred as transaction. Use this operation to get the request and response for a transaction in HAR format.","operationId":"getTransaction","parameters":[{"$ref":"#/components/parameters/testjobIdParam"},{"name":"transactionId","in":"path","description":"The id of the transaction (test step test job) to get the message exchange (request and response) for.","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HarLogRoot"}}}},"404":{"description":"The specified test job or transaction was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/stats/current":{"get":{"tags":["stats"],"summary":"Returns the number of currently running and queued jobs.","description":"TestEngine statistics","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UsageStatistics"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/stats/peak":{"get":{"tags":["stats"],"summary":"Returns peak usage statistics grouped per hour.","description":"TestEngine peak statistics","parameters":[{"name":"from","in":"query","description":"The timestamp to return statistics from","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}},{"name":"to","in":"query","description":"The timestamp to return statistics to","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/PeakUsageStatistics"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/stats/count":{"get":{"tags":["stats"],"summary":"Returns running and queued counts per hour.","description":"TestEngine run statistics","parameters":[{"name":"from","in":"query","description":"The timestamp to return statistics from, default will be 24 hours","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}},{"name":"to","in":"query","description":"The timestamp to return statistics to","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/JobCountStatistics"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs/stats/wait":{"get":{"tags":["stats"],"summary":"Returns maximum and average wait times for a selected period.","description":"TestEngine run statistics","parameters":[{"name":"from","in":"query","description":"The timestamp to return statistics from, default will be 24 hours","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}},{"name":"to","in":"query","description":"The timestamp to return statistics to","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/JobWaitStatistics"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/users/{username}":{"get":{"tags":["user"],"parameters":[{"name":"username","in":"path","description":"The username to request information for","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"403":{"description":"The authenticated user does not have access to the requested user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"The user does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]},"put":{"tags":["user"],"parameters":[{"name":"username","in":"path","description":"The username to update information for","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"requestBody":{"$ref":"#/components/requestBodies/User"},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"403":{"description":"The authenticated user does not have access to the requested user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"The user does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]},"delete":{"tags":["user"],"parameters":[{"name":"username","in":"path","description":"The username to request information for","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"User deleted successfully"},"403":{"description":"The authenticated user does not have access to the requested user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"user not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/token":{"get":{"tags":["user"],"description":"This will provide a JWT token with a short validity, and can be used to connect to WebSocket","responses":{"200":{"description":"OK","content":{"text/plain":{"schema":{"type":"string","example":null}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]},"post":{"tags":["user"],"description":"This will provide a token with a long validity, and can be used to connect to anything but the websocket.","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]},"delete":{"tags":["user"],"description":"Delete the token provided in the body.","requestBody":{"description":"Token to be deleted.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"responses":{"200":{"description":"OK"},"404":{"description":"Token not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/tokens":{"delete":{"tags":["user"],"description":"Delete all tokens for the authenticated users.","responses":{"200":{"description":"OK"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/auditlog":{"get":{"tags":["admin"],"parameters":[{"name":"userName","in":"query","description":"The username to request information for","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"from","in":"query","description":"start date and time, example: 2017-07-21T17:32:28Z","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}},{"name":"to","in":"query","description":"end date and time, example: 2017-07-21T17:32:28Z","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time","example":null}},{"name":"sortOrder","in":"query","description":"Optional parameter for sorting the list on the time.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null,"default":"DESC","enum":["DESC","ASC"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/AuditEvent"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/analytics":{"get":{"tags":["misc"],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyticsProviderDetails"}}}},"404":{"description":"Analytics disabled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}}},"/version":{"get":{"tags":["misc"],"description":"Get version of the TestEngine server","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Version"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}}},"/license/reclaim":{"post":{"tags":["admin"],"summary":"Forces an update of the license session.","responses":{"200":{"description":"OK"},"503":{"description":"Unable to reclaim the license","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/settings":{"get":{"tags":["admin"],"summary":"Retrieve current settings from the server.","operationId":"getServerSettings","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerSettings"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]},"put":{"tags":["admin"],"summary":"Update the settings on the server.","operationId":"updateServerSettings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerSettings"}}}},"responses":{"200":{"description":"Settings successfully updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerSettings"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"TokenSecured":[]},{"basicAuth":[]}]}},"/testjobs":{"get":{"description":"Use this operation to get results of the latest test runs stored in TestEngine.","parameters":[{"name":"fetch","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":""}}}}},"post":{"description":"Use this operation to send a ReadyAPI test project to TestEngine. TestEngine can execute the entire project, or an individual test suite or a test case in it. To run an individual test suite set the testSuiteName parameter. To run an individual test case set the testSuiteName and testCaseName parameters. To run a security test set the securityTestName parameter. In that case testSuiteName and testCaseName parameters are not allowed. The body of the request should be a ReadyAPI project file. Either send the .xml file as is, or as zipped xml. A zip is needed to send in a composite project or when sending in a project with file dependencies. To override properties in the project submit the project with multipart/form-data along with a json properties file.","parameters":[{"name":"testSuiteName","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"testCaseName","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"securityTestName","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"environment","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"async","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"callback","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"clientCertFileName","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"clientCertPassword","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"projectPassword","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"hostAndPort","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"tags","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"proxyHost","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"proxyPort","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"proxyUsername","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"proxyPassword","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"timeout","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},{"name":"priorityJob","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/zip":{},"application/xml":{},"multipart/form-data":{}}},"responses":{"200":{"description":"OK","content":{"application/pdf":{"example":""}}},"412":{"description":"Request contains unresolved dependencies needed to execute the test job. It can be data sources, attachment or client certificates mentioned in test job but not provided in the request. Resend the request with all mentioned files.","content":{"application/json":{"example":""}}}}},"delete":{"description":"Delete jobs older than the specified date. If a date is not provided, `maxDaysToKeep` and `maxJobsToKeep` value is taken from the configuration file and either config deleting more number of jobs will be the considered. The default values can be changed by changing `maxDaysToKeep` and `maxJobsToKeep` in the configuration file. To only remove a single testjob use the endpoint DELETE <code>/testjobs/{testjobId}/delete</code> instead.","parameters":[{"name":"before","in":"query","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}}],"requestBody":{"content":{"application/json":{}}},"responses":{"200":{"description":"Test jobs were successfully deleted","content":{"application/json":{"example":""}}}}}},"/license":{"get":{"responses":{"200":{"description":"OK","content":{"application/json":{"example":""}}}}},"post":{"requestBody":{"content":{"multipart/form-data":{},"application/json":{"example":"{\r\n  \"host\" : \"string\",\r\n  \"port\" : 0\r\n}"}}},"responses":{"200":{"description":"OK","content":{"application/json":{"example":""}}},"400":{"description":"Unable to install or activate license","content":{"application/json":{"example":""}}}}},"delete":{"description":"This will deactivate the license.","requestBody":{"content":{"application/json":{}}},"responses":{"default":{"description":"Default response"}}}},"/users":{"get":{"responses":{"200":{"description":"OK","content":{"application/json":{"example":""}}}}},"post":{"requestBody":{"content":{"application/json":{"example":"{\r\n  \"userName\" : \"string\",\r\n  \"password\" : \"string\",\r\n  \"admin\" : true\r\n}"}}},"responses":{"200":{"description":"OK","content":{"application/json":{"example":""}}}}}},"/testjobs/{testjobId}/report":{"description":"","get":{"description":"Use this operation to get information on the testjob specified by <i>testjobId</i>.  You can find in the response to your testjob request , or you can send a GET <code>/testjobs</code> request to TestEngine.","parameters":[{"name":"testjobId","in":"path","required":true,"schema":{"type":"string","example":null}}],"responses":{"200":{"description":"OK","content":{"application/pdf":{"example":""}}}}}}},"components":{"schemas":{"TestJobSummary":{"type":"object","properties":{"userName":{"type":"string","description":"The name of the user who made the test job request.","example":null},"projectName":{"type":"string","description":"The name of the executed project.","example":null},"status":{"type":"string","description":"Current test job status. If the assertion fail, the test is also FAILED.","example":null,"enum":["QUEUED","RUNNING","CANCELED","FINISHED","FAILED"]},"jobType":{"type":"string","description":"What kind of test has been run in the test job. This is determined by what parameters was used when submitting the test job.","example":null,"enum":["PROJECT","TEST_SUITE","TEST_CASE","SECURITY_TEST"]},"totalTime":{"type":"integer","description":"Time taken (ms) to run the test job.","format":"int64","example":null},"startTime":{"type":"integer","description":"The timestamp of the test job start.","format":"int64","example":null},"submitTime":{"type":"integer","description":"The timestamp of when the test job was submitted.","format":"int64","example":null},"queueTime":{"type":"integer","description":"Time spent in QUEUED state before starting.","format":"int64","example":null},"testjobId":{"type":"string","description":"The identifier of the test run.","example":null},"executionParameters":{"$ref":"#/components/schemas/ExecutionParameters"},"message":{"type":"string","description":"Error message for the test job.","example":null},"priorityJob":{"type":"boolean","description":"This job was sent in as a priority job.","example":null}},"description":"Data structure for test job summary.","example":null},"TestJobReport":{"example":null,"allOf":[{"$ref":"#/components/schemas/TestJobSummary"},{"required":["testSuiteResultReports"],"type":"object","properties":{"testSuiteResultReports":{"type":"array","description":"The array of reports for test suites in the test job.","example":null,"items":{"$ref":"#/components/schemas/TestSuiteResultReport"}}},"example":null}]},"UnresolvedDependency":{"type":"object","properties":{"message":{"type":"string","description":"A string describing what went wrong","example":null},"fileName":{"type":"string","description":"Name of the unresolved file","example":null}},"example":null},"TestStepResultReport":{"type":"object","properties":{"passedAssertions":{"type":"array","description":"Successful messages returned from the assertions.","example":null,"items":{"type":"string","example":null}},"testStepName":{"type":"string","description":"The name of the test step","example":null},"testStepType":{"type":"string","description":"The type of the test step","example":null},"totalTestStepTime":{"type":"integer","description":"Time taken (ms) to run the test step.","format":"int64","example":null},"assertionStatus":{"type":"string","description":"Specifies if the assertions failed or succeeded.","example":null,"enum":["UNKNOWN","PASS","FAIL","CANCELED"]},"requestTimings":{"$ref":"#/components/schemas/RequestTimings"},"transactionId":{"type":"string","description":"The transaction id to identify a particular test job of a test step.","example":null},"transaction":{"type":"string","description":"The path to the transaction","example":null},"messages":{"type":"array","description":"Error messages returned by the assertions.","example":null,"items":{"type":"string","example":null}},"securityScans":{"type":"array","description":"Result of security scans.","example":null,"items":{"$ref":"#/components/schemas/SecurityScan"}}},"description":"Data structure for test step results in the report.","example":null},"SecurityScan":{"type":"object","properties":{"checkType":{"type":"string","example":null},"status":{"$ref":"#/components/schemas/SecurityResultStatus"},"totalSecurityScanTime":{"type":"integer","description":"Time taken (ms) to run the security scan.","format":"int64","example":null},"securityScanRequestResults":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/SecurityScanRequestResults"}}},"example":null},"SecurityScanRequestResults":{"type":"object","properties":{"status":{"$ref":"#/components/schemas/SecurityResultStatus"},"requestTimings":{"$ref":"#/components/schemas/RequestTimings"},"changedParams":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null},"transactionId":{"type":"string","description":"The transaction id to identify a particular test job of a test step.","example":null},"transaction":{"type":"string","description":"The path to the transaction","example":null},"messages":{"type":"array","description":"Error messages returned by the assertions.","example":null,"items":{"type":"string","example":null}}},"example":null},"SecurityResultStatus":{"type":"string","example":null,"enum":["UNKNOWN","PASS","FAIL","WARNINGS","CANCELED","SKIPPED"]},"RequestTimings":{"type":"object","properties":{"readTime":{"type":"integer","description":"Response read time (ms) for a http request.","format":"int64","example":null},"totalRequestTime":{"type":"integer","description":"Total time (ms) taken by http request.","format":"int64","example":null},"connectionTime":{"type":"integer","description":"Connection creation time (ms).","format":"int64","example":null},"timeToFirstByte":{"type":"integer","description":"Time taken (ms) to receive first byte.","format":"int64","example":null},"connectTime":{"type":"integer","description":"Time taken (ms) to connect","format":"int64","example":null},"timeStamp":{"type":"integer","description":"Time when request started","format":"int64","example":null}},"description":"Timings for a request withing a test step","example":null},"TestCaseResultReport":{"required":["testStepResultReports"],"type":"object","properties":{"testCaseName":{"type":"string","description":"The name of the test case the report is for.","example":null},"totalTestCaseTime":{"type":"integer","description":"Time taken (ms) to run the test case.","format":"int64","example":null},"properties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null},"testStepResultReports":{"type":"array","description":"The array of test step result reports.","example":null,"items":{"$ref":"#/components/schemas/TestStepResultReport"}}},"description":"Data structure for the test results report of the test case test job.","example":null},"TestSuiteResultReport":{"required":["testCaseResultReports"],"type":"object","properties":{"testSuiteName":{"type":"string","description":"The test suite name.","example":null},"totalTestSuiteTime":{"type":"integer","description":"Time taken (ms) to run the test suite.","format":"int64","example":null},"testCaseResultReports":{"type":"array","description":"An array of test case test job results.","example":null,"items":{"$ref":"#/components/schemas/TestCaseResultReport"}}},"description":"Results of a test suite test job.","example":null},"HarLogRoot":{"type":"object","properties":{"log":{"$ref":"#/components/schemas/HarLog"}},"example":null},"HarLog":{"type":"object","properties":{"version":{"type":"string","example":null},"creator":{"$ref":"#/components/schemas/HarCreator"},"browser":{"$ref":"#/components/schemas/HarBrowser"},"pages":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarPage"}},"entries":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarEntry"}},"comment":{"type":"string","example":null}},"example":null},"HarCreator":{"type":"object","properties":{"name":{"type":"string","example":null},"version":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarBrowser":{"type":"object","properties":{"name":{"type":"string","example":null},"version":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarPage":{"type":"object","properties":{"startedDateTime":{"type":"string","example":null},"id":{"type":"string","example":null},"title":{"type":"string","example":null},"pageTimings":{"$ref":"#/components/schemas/HarPageTimings"},"comment":{"type":"string","example":null}},"example":null},"HarPageTimings":{"type":"object","properties":{"onContentLoad":{"type":"integer","format":"int64","example":null},"onLoad":{"type":"integer","format":"int64","example":null},"comment":{"type":"string","example":null}},"example":null},"HarEntry":{"type":"object","properties":{"pageref":{"type":"string","example":null},"startedDateTime":{"type":"string","example":null},"time":{"type":"integer","format":"int64","example":null},"request":{"$ref":"#/components/schemas/HarRequest"},"response":{"$ref":"#/components/schemas/HarResponse"},"cache":{"$ref":"#/components/schemas/HarCache"},"timings":{"$ref":"#/components/schemas/HarTimings"},"serverIPAddress":{"type":"string","example":null},"connection":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarRequest":{"type":"object","properties":{"method":{"type":"string","example":null},"url":{"type":"string","example":null},"httpVersion":{"type":"string","example":null},"cookies":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarCookie"}},"headers":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarHeader"}},"queryString":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarQueryString"}},"postData":{"$ref":"#/components/schemas/HarPostData"},"headersSize":{"type":"integer","format":"int64","example":null},"bodySize":{"type":"integer","format":"int64","example":null},"comment":{"type":"string","example":null}},"example":null},"HarResponse":{"type":"object","properties":{"status":{"type":"integer","format":"int32","example":null},"statusText":{"type":"string","example":null},"httpVersion":{"type":"string","example":null},"cookies":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarCookie"}},"headers":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarHeader"}},"content":{"$ref":"#/components/schemas/HarContent"},"redirectURL":{"type":"string","example":null},"headersSize":{"type":"integer","format":"int64","example":null},"bodySize":{"type":"integer","format":"int64","example":null},"comment":{"type":"string","example":null}},"example":null},"HarCache":{"type":"object","properties":{"beforeRequest":{"$ref":"#/components/schemas/HarCacheRequest"},"afterRequest":{"$ref":"#/components/schemas/HarCacheRequest"},"comment":{"type":"string","example":null}},"example":null},"HarTimings":{"type":"object","properties":{"blocked":{"type":"integer","format":"int64","example":null},"connect":{"type":"integer","format":"int64","example":null},"send":{"type":"integer","format":"int64","example":null},"wait":{"type":"integer","format":"int64","example":null},"receive":{"type":"integer","format":"int64","example":null},"ssl":{"type":"integer","format":"int64","example":null},"comment":{"type":"string","example":null}},"example":null},"HarCookie":{"type":"object","properties":{"name":{"type":"string","example":null},"value":{"type":"string","example":null},"path":{"type":"string","example":null},"domain":{"type":"string","example":null},"expires":{"type":"string","example":null},"httpOnly":{"type":"boolean","example":null,"default":false},"secure":{"type":"boolean","example":null,"default":false},"comment":{"type":"string","example":null}},"example":null},"HarHeader":{"type":"object","properties":{"name":{"type":"string","example":null},"value":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarContent":{"type":"object","properties":{"size":{"type":"integer","format":"int64","example":null},"compression":{"type":"integer","format":"int64","example":null},"mimeType":{"type":"string","example":null},"text":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarQueryString":{"type":"object","properties":{"name":{"type":"string","example":null},"value":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarCacheRequest":{"type":"object","properties":{"expires":{"type":"string","format":"date-time","example":null},"lastAccess":{"type":"string","format":"date-time","example":null},"hitCount":{"type":"integer","format":"int64","example":null},"comment":{"type":"string","example":null},"etag":{"type":"string","example":null}},"example":null},"HarPostData":{"type":"object","properties":{"mimeType":{"type":"string","example":null},"params":{"type":"array","example":null,"items":{"$ref":"#/components/schemas/HarParam"}},"text":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"HarParam":{"type":"object","properties":{"name":{"type":"string","example":null},"value":{"type":"string","example":null},"fileName":{"type":"string","example":null},"contentType":{"type":"string","example":null},"comment":{"type":"string","example":null}},"example":null},"User":{"properties":{"userName":{"type":"string","example":null},"password":{"type":"string","example":null},"admin":{"type":"boolean","example":null}},"description":"User object containing the basic user information which will be returned for the current user or when the user with role ADMIN tries to get all user information.","example":null},"AuditEvent":{"properties":{"eventTime":{"type":"string","format":"date-time","example":null},"userName":{"type":"string","example":null},"eventType":{"type":"string","example":null},"eventData":{"type":"object","additionalProperties":{"example":null,"oneOf":[{"type":"string","example":null},{"type":"integer","example":null}]},"example":null}},"description":"Object containing the log details.","example":null},"AnalyticsProviderDetails":{"properties":{"provider":{"type":"string","description":"name of the analytics provider.","example":null},"token":{"type":"string","description":"token for provider.","example":null}},"description":"Object containing details of analytics provider.","example":null},"Version":{"properties":{"version":{"type":"string","description":"TestEngine server version.","example":null}},"description":"Object containing version of the TestEngine server.","example":null},"LicenseDetails":{"properties":{"licensedModule":{"type":"string","example":null},"userName":{"type":"string","example":null},"organization":{"type":"string","example":null},"startDate":{"type":"string","description":"The timestamp of activation.","format":"date-time","example":null},"expireDate":{"type":"string","description":"The timestamp of expiration.","format":"date-time","example":null},"licenseId":{"type":"string","example":null},"professional":{"type":"boolean","example":null},"fixed":{"type":"boolean","example":null},"expired":{"type":"boolean","example":null},"trial":{"type":"boolean","example":null},"maxConcurrentJobs":{"type":"integer","format":"int32","example":null},"active":{"type":"boolean","example":null}},"description":"Details of the licence installed.","example":null},"UsageStatistics":{"properties":{"running":{"type":"integer","description":"Number of currently running jobs","example":null},"queued":{"type":"integer","description":"Number of currently queued jobs","example":null}},"description":"Usage statistics for TestEngine","example":null},"PeakUsageStatistics":{"description":"Peak value usage statistics for one hour","example":null,"allOf":[{"$ref":"#/components/schemas/UsageStatistics"},{"type":"object","properties":{"from":{"type":"string","format":"date-time","example":null},"to":{"type":"string","format":"date-time","example":null},"maxConcurrentJobs":{"type":"integer","description":"The limit of the concurrent jobs at this time","format":"int32","example":null}},"example":null}]},"JobCountStatistics":{"description":"Running / Queued statics for one hour","example":null,"allOf":[{"$ref":"#/components/schemas/UsageStatistics"},{"type":"object","properties":{"from":{"type":"string","format":"date-time","example":null},"to":{"type":"string","format":"date-time","example":null}},"example":null}]},"JobWaitStatistics":{"properties":{"from":{"type":"string","description":"time since we need statics from.","format":"date-time","example":null},"to":{"type":"string","description":"time till we need statics.","format":"date-time","example":null},"maxWaitTime":{"type":"integer","description":"time in millis","format":"int64","example":null},"avgWaitTime":{"type":"integer","description":"time in millis","format":"int64","example":null}},"description":"Maximum and average wait time","example":null},"ExecutionParameters":{"properties":{"testSuiteName":{"type":"string","description":"Name of test suite if present in request parameters","example":null},"testCaseName":{"type":"string","description":"Name of test case if present in request parameters","example":null},"securityTestName":{"type":"string","description":"Name of security test if present in request parameters","example":null},"tags":{"type":"array","description":"List of tags specified in request.","example":null,"items":{"type":"string","example":null}}},"description":"Details about the type of the test, what test case or test suite is requested.","example":null},"FloatingLicenseServerInfo":{"type":"object","properties":{"host":{"type":"string","description":"Host name or IP address of the floating license server","example":null},"port":{"type":"integer","description":"The port of the floating license server","example":null}},"description":"Data structure to specify a floating license server","example":null},"LicenseActivationInfo":{"required":["email","firstName","lastName"],"type":"object","properties":{"email":{"type":"string","format":"email","example":"foo@bar.com"},"firstName":{"type":"string","example":"Foo"},"lastName":{"type":"string","example":"Bar"},"title":{"type":"string","example":null},"company":{"type":"string","example":"My Company"},"address":{"type":"string","example":"1 Gold Bolvd"},"city":{"type":"string","example":"San Francisco"},"zipCode":{"type":"string","example":"94401"},"state":{"type":"string","example":"CA"},"country":{"type":"string","example":"USA"},"phone":{"type":"string","example":"+1 206 555 0100"}},"example":null},"ErrorMessage":{"required":["code","message"],"type":"object","properties":{"code":{"type":"integer","example":null},"message":{"type":"string","example":null},"details":{"type":"string","example":null}},"example":null},"ServerSettings":{"properties":{"maxDaysToKeep":{"type":"integer","description":"The number of days jobs will be kept when ´DELETE /testjobs´ is called without the ´before´ parameter. It accepts only 0 , -1 and positive integer values. To disable this config use -1 as value.","format":"int32","example":null},"maxJobsToKeep":{"type":"integer","description":"The number of jobs will be kept when ´DELETE /testjobs´ is called without the ´before´ parameter. It accepts only 0 , -1 and positive integer values. To disable this config use -1 as value.","format":"int32","example":null},"allowedConnectTargets":{"type":"array","description":"External targets that the tests are allowed to connect to.","example":null,"items":{"type":"string","example":null}},"allowedIncomingConnectTargets":{"type":"array","description":"Endpoints that tests are allowed to open server sockets to.","example":null,"items":{"type":"string","example":null}},"allowedFilePaths":{"type":"array","description":"Paths that the tests are allowed to read from/write to.","example":null,"items":{"type":"string","example":null}},"testStepJdbcConnectionsAllowed":{"type":"boolean","description":"Specifies if test steps are allowed connecting to databases using JDBC.","example":null}},"description":"Settings for the server that can be updated while the server is running","example":null},"Token":{"properties":{"token":{"type":"string","example":null}},"description":"Token to be used instead of basic auth","example":null},"CustomProperties":{"properties":{"targetName":{"type":"string","description":"Test suite or test case name for where to apply the properties. Omit to set project properties.","example":null},"properties":{"type":"object","additionalProperties":{"type":"string","example":null},"example":null}},"description":"Override properties in the project","example":null}},"responses":{"ErrorResponse":{"description":"An error has occurred","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}},"parameters":{"testCaseParam":{"name":"testCaseName","in":"query","description":"The name of the test case to run.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"testSuiteParam":{"name":"testSuiteName","in":"query","description":"The name of the test suite to run.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"securityTestParam":{"name":"securityTestName","in":"query","description":"The name of the security test to run.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"environmentParam":{"name":"environment","in":"query","description":"The target environment for test job.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"asyncParam":{"name":"async","in":"query","description":"Specifies when TestEngine replies:<br/>`true` - Immediately.<br/>`false` - After the test job is over.","required":false,"style":"form","explode":true,"schema":{"type":"boolean","example":null,"default":true}},"callbackParam":{"name":"callback","in":"query","description":"The URL, to which the results will be posted.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"clientCertParam":{"name":"clientCertFileName","in":"query","description":"The name of the separately provided client certificate file.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"clientCertPasswordParam":{"name":"clientCertPassword","in":"query","description":"The password for the separately provided client certificate file.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"projectPasswordParam":{"name":"projectPassword","in":"query","description":"The password used to decrypt an encrypted project file.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"hostAndPortParam":{"name":"hostAndPort","in":"query","description":"The endpoint to be used for HTTP requests sent by this test, in the format host:[port].","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"tagsParam":{"name":"tags","in":"query","description":"A comma-separated list of tags identifying which test suites and test cases to run when executing the test. A test case or test suite must contain all provided tags to be executed. Test suites are filtered by tags only if the testSuiteName parameter is omitted. Test cases are filtered by tags only if the testSuiteName and testCaseName parameters are omitted.","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"proxyHostParam":{"name":"proxyHost","in":"query","description":"the HTTP proxy host","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"proxyPortParam":{"name":"proxyPort","in":"query","description":"the proxy port","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"proxyUsernameParam":{"name":"proxyUsername","in":"query","description":"the proxy username","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"proxyPasswordParam":{"name":"proxyPassword","in":"query","description":"the proxy password","required":false,"style":"form","explode":true,"schema":{"type":"string","example":null}},"testjobIdParam":{"name":"testjobId","in":"path","description":"The unique identifier of a test job","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":null}},"timeoutParam":{"name":"timeout","in":"query","description":"the timeout in seconds for running the test job (the queue time is not included)","required":false,"style":"form","explode":true,"schema":{"type":"integer","format":"int64","example":null}},"priorityParam":{"name":"priorityJob","in":"query","description":"the job will skip ahead of all non priority jobs in the queue (admin user needed)","required":false,"style":"form","explode":true,"schema":{"type":"boolean","example":null,"default":false}}},"requestBodies":{"User":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"securitySchemes":{"TokenSecured":{"type":"http","description":"Preferred authentication scheme.","in":"header","scheme":"bearer"},"basicAuth":{"type":"http","description":"Alternative authentication scheme. Credentials should be sent preemptively.","scheme":"basic"}}}}]]></con:content>
      <con:type>https://swagger.io/openapiv3/specification</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://localhost:8080/api/v1</con:endpoint>
  </con:endpoints>
  <con:environmentSpec>
    <con:entry environmentId="74bbbf5c-1c8b-4412-9d8c-a1b1c443fc40">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:interface>
